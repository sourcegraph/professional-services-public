services:
  postgres:
    image: postgres:14-alpine
    container_name: time-tracker-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: time_tracker
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: time-tracker-backend
    restart: always
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - PORT=5000
      - DB_NAME=time_tracker
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres
      - JWT_SECRET=your-secret-key-change-in-production
      - JWT_EXPIRATION=24h
      - NODE_ENV=production
    networks:
      - app-network

  frontend:
    build: ./frontend
    container_name: time-tracker-frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://backend:5000/api
      - NODE_ENV=production
      - CI=false
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
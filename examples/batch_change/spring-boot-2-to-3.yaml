version: 2
name: spring-boot-2-to-3
description: Migrate Spring Boot 2.x applications to Spring Boot 3.x

on:
  - repositoriesMatchingQuery: repo:has.file(build.gradle) file:has.content('org.springframework.boot' version '2.*')

steps:
  # Step 1: Update Java version in mise.toml if present
  - run: |
      if [ -f mise.toml ]; then
        comby -in-place 'java = ":[version]"' 'java = "temurin-17"' mise.toml
      fi
    container: comby/comby

  # Step 2: Update build.gradle with Spring Boot 3.x dependencies
  - run: |
      comby -in-place 'id '\''org.springframework.boot'\'' version '\'':[version]'\''' 'id '\''org.springframework.boot'\'' version '\''3.2.4'\''' build.gradle
      
      # Add Java compatibility if not present
      if ! grep -q "sourceCompatibility" build.gradle; then
        comby -in-place 'repositories {:[rest]}' 'repositories {:[rest]}\n\njava {\n    sourceCompatibility = JavaVersion.VERSION_17\n    targetCompatibility = JavaVersion.VERSION_17\n}' build.gradle
      else
        comby -in-place 'sourceCompatibility = :[version]' 'sourceCompatibility = JavaVersion.VERSION_17' build.gradle
        comby -in-place 'targetCompatibility = :[version]' 'targetCompatibility = JavaVersion.VERSION_17' build.gradle
      fi
      
      # Add dependency management plugin if not present
      if ! grep -q "io.spring.dependency-management" build.gradle; then
        comby -in-place 'id '\''org.springframework.boot'\'' version '\'':[version]'\''' 'id '\''org.springframework.boot'\'' version '\''3.2.4'\''\n    id '\''io.spring.dependency-management'\'' version '\''1.1.4'\''' build.gradle
      else
        comby -in-place 'id '\''io.spring.dependency-management'\'' version '\'':[version]'\''' 'id '\''io.spring.dependency-management'\'' version '\''1.1.4'\''' build.gradle
      fi
    container: comby/comby

  # Step 3: Update Gradle wrapper
  - run: |
      if [ -f gradlew ]; then
        ./gradlew wrapper --gradle-version 8.7
      fi
    container: eclipse-temurin:17-jdk-alpine-3.21

  # Step 4: Migrate javax to jakarta packages in Java files
  - run: |
      find . -name "*.java" -type f -exec comby -in-place 'import javax.persistence.:[rest]' 'import jakarta.persistence.:[rest]' {} \;
      find . -name "*.java" -type f -exec comby -in-place 'import javax.validation.:[rest]' 'import jakarta.validation.:[rest]' {} \;
      find . -name "*.java" -type f -exec comby -in-place 'import javax.servlet.:[rest]' 'import jakarta.servlet.:[rest]' {} \;
      find . -name "*.java" -type f -exec comby -in-place 'import javax.annotation.:[rest]' 'import jakarta.annotation.:[rest]' {} \;
    container: comby/comby

  # Step 5: Update WebSecurityConfigurerAdapter usage
  - run: |
      find . -name "*.java" -type f -exec comby -in-place 'extends WebSecurityConfigurerAdapter' '' {} \;
      find . -name "*.java" -type f -exec comby -in-place '@Override\s+protected void configure(HttpSecurity http) throws Exception {:[body]}' '@Bean\npublic SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {:[body]\nreturn http.build();\n}' {} \;
    container: comby/comby

changesetTemplate:
  title: Migrate to Spring Boot 3.2.4
  body: |
    # Spring Boot 3.2.4 Migration
    
    This automated migration includes:
    
    * Updated Java requirement to Java 17
    * Updated Gradle wrapper to 8.7
    * Updated Spring Boot to 3.2.4
    * Migrated javax packages to jakarta
    * Updated deprecated security configurations
    
    ## Manual verification needed
    
    After applying these changes, please:
    1. Verify all tests pass
    2. Check for any remaining javax imports that might need manual migration
    3. Review security configuration changes
  branch: spring-boot-3-migration
  commit:
    message: Migrate to Spring Boot 3.2.4
